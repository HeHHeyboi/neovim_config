-- Window
Use External Editor: On
Exec Path: nvim
Exec Flags: --server "\\\\.\\pipe\\godot.pipe" --remote-send "<C-\><C-N>:n {file}<CR>:call cursor({line},{col})<CR>"

-- Unix
Use External Editor: On
Exec Path: nvim
Exec Flags: --server /tmp/godot.pipe --remote-send "<esc>:n {file}<CR>:call cursor({line},{col})<CR>"
or use 
Exec Flags: --server {project}/godot.pipe --remote-send "<esc>:n {file}<CR>:call cursor({line},{col})<CR>"
to create in project dir

 local paths_to_check = { '/', '/../' }
 local is_godot_project = false
 local godot_project_path = ''
 local cwd = vim.fn.getcwd()

 for key, value in pairs(paths_to_check) do
 	if vim.uv.fs_stat(cwd .. value .. 'project.godot') then
 		is_godot_project = true
 		godot_project_path = cwd .. value
 		break
 	end
 end

 local is_server_running = vim.uv.fs_stat(godot_project_path .. '/server.pipe')

 if is_godot_project and not is_server_running then
 	local addr = godot_project_path .. '/server.pipe'

 	if vim.fn.has('win32') then
 		addr = '127.0.0.1:6004'
 	end
 	vim.fn.serverstart(addr)
 end

-- Windows
Use External Editor: On
Exec Path: nvim
Exec Flags: --server 127.0.0.1:6004 --remote-send "<esc>:n {file}<CR>:call cursor({line},{col})<CR>"

local port = os.getenv('GDScript_Port') or '6005'
local cmd = {'ncat', '127.0.0.1', port}
local pipe = [[\\.\pipe\godot.pipe]]

vim.lsp.start({
  name = 'Godot',
  cmd = cmd,
  root_dir = vim.fs.dirname(vim.fs.find({ 'project.godot', '.git' }, { upward = true })[1]),
  on_attach = function(client, bufnr)
    vim.api.nvim_command([[echo serverstart(']] .. pipe .. [[')]])
  end
})
